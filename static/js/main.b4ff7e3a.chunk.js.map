{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","width","alt","item","quantity","followers","views","likes","Statistics","title","statistics","map","style","backgroundColor","getColor","label","percentage","id","r","Math","floor","random","g","b","toString","console","log","FriendListItem","isOnline","online","offline","FriendList","friends","list","friend","TransactionHistory","items","history","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b4ff7e3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Profile_avatar__aV4u5\",\"name\":\"Profile_name__2Psdw\",\"tag\":\"Profile_tag__20iCl\",\"location\":\"Profile_location__3GRdm\",\"stats\":\"Profile_stats__25zJx\",\"item\":\"Profile_item__Kyaaw\",\"quantity\":\"Profile_quantity__1zFQ4\",\"profile\":\"Profile_profile__3dzvr\",\"description\":\"Profile_description__2GJPq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"FriendList_avatar__2fiZr\",\"item\":\"FriendList_item__-lYix\",\"name\":\"FriendList_name__2fvFO\",\"status\":\"FriendList_status__3C5jV\",\"online\":\"FriendList_online__2Kfti FriendList_status__3C5jV\",\"offline\":\"FriendList_offline__XKwl- FriendList_status__3C5jV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__3PVIg\",\"statistics\":\"Statistics_statistics__2QFok\",\"stats\":\"Statistics_stats__3stUL\",\"label\":\"Statistics_label__227YU\",\"percentage\":\"Statistics_percentage__3inQt\",\"item\":\"Statistics_item__1vE2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__3SkB0\"};","import PropTypes from 'prop-types';\nimport s from './Profile.module.css'\n\n\nexport default function  Profile({name, tag, location, avatar, stats}) {\n    return  <div className={s.profile}>\n  <div className={s.description}>\n    <img\n                src={avatar}\n                width=\"100\"\n      alt=\"Аватар пользователя\"\n      className={s.avatar}\n    />\n    <p className={s.name}>{name}</p>\n    <p className={s.tag}>@{tag}</p>\n    <p className={s.location}>{location}</p>\n  </div>\n\n  <ul className={s.stats}>\n    <li className={s.item}>\n      <span className=\"label\">Followers</span>\n      <span className={s.quantity}>{stats.followers}</span>\n    </li>\n    <li className={s.item}>\n      <span className=\"label\">Views</span>\n      <span className={s.quantity}>{stats.views}</span>\n    </li>\n    <li className={s.item}>\n      <span className=\"label\">Likes</span>\n      <span className={s.quantity}>{stats.likes}</span>\n    </li>\n  </ul>\n</div>\n}\n\n// name — имя пользователя\n// tag — тег в социальной сети без @\n// location — город и страна\n// avatar — url на изображение\n// stats — объект с информацией об активности\n\nProfile.propTypes = {\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.object.isRequired,\n}\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({ title, stats }) {\n    return <section className={s.statistics}>\n     { title && <h2 className={s.title}>Upload stats</h2>}\n        <ul className={s.stats}>\n        {stats.map(item => (<li key={ item.id}className={s.item} style={{backgroundColor: getColor()}}>\n      <span className={s.label}>{item.label}</span>\n      <span className={s.percentage}>{item.percentage}%</span>\n            </li>))}\n  </ul>\n</section>\n\n}\n\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string,\n        label: PropTypes.string,\n        percentage: PropTypes.number,\n    }\n    )),\n}\n\nfunction getColor() {\n  let r = Math.floor(Math.random() * (256));\n  let g = Math.floor(Math.random() * (256));\n  let b = Math.floor(Math.random() * (256));\n  let color = '#' + r.toString(16) + g.toString(16) + b.toString(16);\n  return color;\n}\n\nconsole.log(getColor())","import PropTypes from 'prop-types';\nimport s from '../FriendList/FriendList.module.css'\n\nfunction FriendListItem({avatar, name, isOnline}) {\n    return(<li className={s.item}>\n  <span className={isOnline ?  s.online : s.offline}></span>\n  <img className={s.avatar} src={avatar} alt=\"\" width=\"48\" />\n  <p className={s.name}>{name}</p>\n</li>)\n}\n\nexport default FriendListItem;\n// avatar - ссылка на аватар\n// name - имя друга\n// isOnline - буль сигнализирующий о состоянии друга, в сети или нет.\nFriendListItem.propTypes = {\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n}","import PropTypes from 'prop-types';\nimport  s from './FriendList.module.css';\nimport FriendListItem from '../FriendListItem/FriendListItem';\n\nfunction FriendList ({friends}) {\n    return <ul className={s.list}>\n        {friends.map(friend => (\n            <FriendListItem key={friend.id } avatar={friend.avatar} name={friend.name} isOnline={ friend.isOnline}/>\n))\n    }\n</ul>\n}\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n    }))\n}\nexport default FriendList;","import PropTypes from 'prop-types';\nimport s from '../TransactionHistory/TransactionHistory.module.css';\n\nfunction TransactionHistory({ items }) {\nreturn (<table className={s.history}>\n  <thead>\n    <tr>\n      <th>Type</th>\n      <th>Amount</th>\n      <th>Currency</th>\n    </tr>\n  </thead>\n\n        <tbody>\n            {items.map(item => (<tr key={item.id}>\n      <td>{item.type}</td>\n      <td>{item.amount}</td>\n      <td>{item.currency}</td>\n    </tr>))}\n  </tbody>\n</table>)\n}\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        amount: PropTypes.string.isRequired,\n        currency: PropTypes.string.isRequired,\n  }))  \n}\nexport default TransactionHistory;\n","\nimport './App.css';\nimport Profile from \"./components/Profile/Profile\";\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\n//nfv где рендерим  компонент  там и импортируем данные для  его рендера \nimport user from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\n\n\n\nfunction App() {\n  return(\n    <div>\n    <Profile\n  name={user.name}\n  tag={user.tag}\n  location={user.location}\n  avatar={user.avatar}\n  stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>)\n}\n\n\nexport default App\n","import React from 'react';\n////єтот імпорт не нужен, если спольз  jsx \n\n\nimport ReactDOM from 'react-dom';\n// import './modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n\n// const data = {\n//     \"id\": \"id-1\",\n//     \"url\": \"https://cdn.pixabay.com/photo/2017/07/31/22/05/feathers-2561511_1280.jpg\",\n//     \"title\": \"Feathers. Art abstract\",\n//     \"price\": 500,\n//     \"author\": {\n//       \"tag\": \"ractapopulous\",\n//       \"url\": \"https://pixabay.com/users/ractapopulous-24766/\"\n//     },\n//     \"quantity\": 10\n//   }\n\n\n\n// ReactDOM.render(<Painting url={data.url} title={data.title} authorName={data.author.url} profileUrl={data.author.url} />, document.querySelector('#root'))\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}